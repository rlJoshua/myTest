security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\Member:
            algorithm: auto
    providers:
        users_in_memory: { memory: null }
        app_user_provider:
            entity:
                class: App\Entity\Member
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: users_in_memory
            guard:
                authenticators:
                    - App\Security\MemberAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        #- { path: ^/admin, roles: ROLE_ADMIN, IS_AUTHENTICATED_FULLY }
        #- { path: ^/communication, roles: ROLE_COM, IS_AUTHENTICATED_FULLY }
        #- { path: ^/reviewer, roles: ROLE_REVIEWER, IS_AUTHENTICATED_FULLY }
        #- { path: ^/member, roles: ROLE_MEMBER, IS_AUTHENTICATED_FULLY }

    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER, ROLE_COM, ROLE_REVIEWER, ROLE_MEMBER]
        ROLE_COM: [ROLE_MEMBER, ROLE_REVIEWER]
        ROLE_REVIEWER: ROLE_MEMBER